// <auto-generated />
using System;
using HmoServer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HmoServer.Migrations
{
    [DbContext(typeof(HmoContext))]
    [Migration("20230508010005_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HmoServer.Models.CoronaDetail", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("customer_id");

                    b.Property<string>("FirstVaccinationManufacturer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("first_vaccination_manufacturer");

                    b.Property<DateTime?>("FirstVaccitionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("first_vaccition_date");

                    b.Property<string>("ForthVaccinationManufacturer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("forth_vaccination_manufacturer");

                    b.Property<DateTime?>("ForthVaccitionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("forth_vaccition_date");

                    b.Property<DateTime?>("PositiveResultDate")
                        .HasColumnType("datetime")
                        .HasColumnName("positive_result_date");

                    b.Property<DateTime?>("RecoveryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("recovery_date");

                    b.Property<string>("SecondVaccinationManufacturer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("second_vaccination_manufacturer");

                    b.Property<DateTime?>("SecondVaccitionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("second_vaccition_date");

                    b.Property<string>("ThirdVaccinationManufacturer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("third_vaccination_manufacturer");

                    b.Property<DateTime?>("ThirdVaccitionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("third_vaccition_date");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CoronaDetails");
                });

            modelBuilder.Entity("HmoServer.Models.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("customer_id");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime")
                        .HasColumnName("birth_date");

                    b.Property<string>("CellPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cell_phone");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("city");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("first_name");

                    b.Property<int?>("HouseNumber")
                        .HasColumnType("int")
                        .HasColumnName("house_number");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Street")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("street");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("HmoServer.Models.CoronaDetail", b =>
                {
                    b.HasOne("HmoServer.Models.Customer", "Customer")
                        .WithMany("CoronaDetails")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_CoronaDetails_Customers");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("HmoServer.Models.Customer", b =>
                {
                    b.Navigation("CoronaDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
